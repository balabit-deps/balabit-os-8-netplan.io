From: =?utf-8?q?Lukas_M=C3=A4rdian?= <slyon@ubuntu.com>
Date: Thu, 26 Oct 2023 15:36:05 +0200
Subject: tests: Add autopkgtest for LP#1959570

Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/netplan.io/+bug/1959570
Origin: https://github.com/canonical/netplan/pull/419
---
 tests/integration/regressions.py | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/tests/integration/regressions.py b/tests/integration/regressions.py
index 7d8cabb..b512371 100644
--- a/tests/integration/regressions.py
+++ b/tests/integration/regressions.py
@@ -21,6 +21,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
+import os
 import sys
 import signal
 import subprocess
@@ -140,5 +141,32 @@ r'Reverting\.')
 class TestNetworkManager(IntegrationTestsBase, _CommonTests):
     backend = 'NetworkManager'
 
+    def test_try_accept_lp1959570(self):
+        original_env = dict(os.environ)
+        self.addCleanup(subprocess.call, ['ip', 'link', 'delete', 'br54'], stderr=subprocess.DEVNULL)
+        self.addCleanup(subprocess.call, ['mv', '/snap/bin/nmcli', '/usr/bin/nmcli'], stderr=subprocess.DEVNULL)
+        self.addCleanup(os.environ.update, original_env)
+        os.makedirs('/snap/bin', exist_ok=True)
+        subprocess.call(['mv', '/usr/bin/nmcli', '/snap/bin/nmcli'])
+        with open(self.config, 'w') as f:
+            f.write('''network:
+  renderer: %(r)s
+  version: 2
+  bridges:
+    br54:
+      addresses:
+      - "10.0.0.20/24"''' % {'r': self.backend})
+            os.chmod(self.config, mode=0o600)
+        del os.environ['PATH']  # clear PATH, to test for LP: #1959570
+        p = subprocess.Popen(['/usr/sbin/netplan', 'try'], bufsize=1, text=True,
+                             stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+        time.sleep(2)
+        p.send_signal(signal.SIGUSR1)
+        out, err = p.communicate(timeout=10)
+        os.environ = original_env
+        self.assertEqual('', err)
+        self.assertNotIn('An error occurred:', out)
+        self.assertIn('Configuration accepted.', out)
+
 
 unittest.main(testRunner=unittest.TextTestRunner(stream=sys.stdout, verbosity=2))
