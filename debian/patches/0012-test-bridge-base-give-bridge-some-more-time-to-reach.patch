From: =?utf-8?q?Lukas_M=C3=A4rdian?= <slyon@ubuntu.com>
Date: Fri, 26 Nov 2021 10:20:03 +0100
Subject: test:bridge:base: give bridge some more time to reach 'state UP'

---
 tests/integration/base.py    | 5 +++++
 tests/integration/bridges.py | 2 +-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/tests/integration/base.py b/tests/integration/base.py
index ec72d3c..fffcaa7 100644
--- a/tests/integration/base.py
+++ b/tests/integration/base.py
@@ -319,6 +319,10 @@ class IntegrationTestsBase(unittest.TestCase):
         '''Tell generate_and_settle() to wait for a specific state'''
         return iface + '/' + state
 
+    def state_up(self, iface):
+        '''Tell generate_and_settle() to wait for the interface to be brought UP'''
+        return self.state(iface, 'state UP')
+
     def state_dhcp4(self, iface):
         '''Tell generate_and_settle() to wait for assignment of an IP4 address from DHCP'''
         return self.state(iface, 'inet 192.168.')  # TODO: make this a regex to check for specific DHCP ranges
@@ -353,6 +357,7 @@ class IntegrationTestsBase(unittest.TestCase):
             if expected_output in out:
                 break
             sys.stdout.write('.')  # waiting indicator
+            sys.stdout.flush()
             time.sleep(1)
         else:
             subprocess.call(cmd)  # print output of the failed command
diff --git a/tests/integration/bridges.py b/tests/integration/bridges.py
index b24e6e9..a391e4f 100644
--- a/tests/integration/bridges.py
+++ b/tests/integration/bridges.py
@@ -287,7 +287,7 @@ class TestNetworkd(IntegrationTestsBase, _CommonTests):
   bridges:
     mybr:
       interfaces: [ethbr]''' % {'r': self.backend, 'e2c': self.dev_e2_client})
-        self.generate_and_settle([self.dev_e2_client, 'mybr'])
+        self.generate_and_settle([self.dev_e2_client, self.state_up('mybr')])
         self.assert_iface_up(self.dev_e2_client, ['master mybr'], ['inet '])
         self.assert_iface_up('mybr', [], ['inet 192.168.6.[0-9]+/24'])
         lines = subprocess.check_output(['bridge', 'link', 'show', 'mybr'],
